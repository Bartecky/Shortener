import string, random, csv
from Shortener_Project.settings import SHORTCODE


def token_generator(size=SHORTCODE, chars=string.digits + string.ascii_letters):
    """
    Returns autogenerated token
    """
    return ''.join(random.choice(chars) for _ in range(size))


def create_short_url(instance):
    """
    Saves unique token for every single instance
    """
    token = token_generator()
    instance_class = instance.__class__
    if instance_class.objects.filter(short_url=token).exists():
        return create_short_url(instance)
    return token


def generate_csv(data, response):
    """
    Creates new csv file with rows containing data
    """
    writer = csv.writer(response, delimiter=';')
    writer.writerows(data)
    return response



def get_client_ip(request):
    """
    Returns client IP address
    """
    x_forwarded_for = request.META.get('HTTP_X_FORWARDED_FOR')
    if x_forwarded_for:
        ip = x_forwarded_for.split(',')[0]
    else:
        ip = request.META.get('REMOTE_ADDR')
    return ip


def check_input_url(url):
    """
    Custom validator for url
    """
    if url.startswith('http://') or url.startswith('www.'):
        result = url
    else:
        result = 'http://' + url
    if not url.endswith(('.com', '.pl', '.de', '.uk', '.org')):
        result += '.com'
    return result
